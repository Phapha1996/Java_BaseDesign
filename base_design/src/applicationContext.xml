<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"
        > <!-- bean definitions here -->
<!-- 声明使用注解的驱动 -->
	<aop:aspectj-autoproxy/><!-- 声明使用注解切面 -->
	<context:annotation-config/><!-- 声明使用注解IOC -->
	<context:component-scan base-package="org.fage"></context:component-scan><!-- 需要扫描的包，查看IOC组件 -->
	<tx:annotation-driven transaction-manager="txManager"/><!-- 事务annotation驱动 -->
	
<!-- 设置properties属性文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
				<value>classpath*:dao.properties</value>
            </list>  
        </property>  
    </bean>
<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">    
        <property name="driverClass"><value>${driver}</value></property>    
		<property name="jdbcUrl"><value>${url}</value></property>    
        <property name="user"><value>${username}</value></property>    
        <property name="password"><value>${password}</value></property>    
 		<!--连接池中保留的最小连接数。-->    
        <property name="minPoolSize"><value>${minPoolSize}</value></property>    
 		<!--连接池中保留的最大连接数。Default: 15 -->    
        <property name="maxPoolSize"><value>${maxPoolSize}</value></property>    
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->    
        <property name="initialPoolSize"><value>${initialPoolSize}</value></property>    
 		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->    
        <property name="maxIdleTime"><value>${maxIdleTime}</value></property>    
 		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->    
        <property name="acquireIncrement"><value>${acquireIncrement}</value></property>    
 		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements    
  		属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。    
  		如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->    
        <property name="maxStatements"><value>${maxStatements}</value></property>    
		 <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->    
        <property name="idleConnectionTestPeriod"><value>${idleConnectionTestPeriod}</value></property>    
 		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->    
        <property name="acquireRetryAttempts"><value>${acquireRetryAttempts}</value></property>    
 		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效    
  		保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试    
 		 获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->    
        <property name="breakAfterAcquireFailure"><value>${breakAfterAcquireFailure}</value></property>    
 		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的    
  		时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable    
  		等方法来提升连接测试的性能。Default: false -->    
        <property name="testConnectionOnCheckout"><value>${testConnectionOnCheckout}</value></property>    
    </bean>    
	
<!-- Hibernate的基础配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" scope="singleton">    
        <property name="dataSource"><ref bean="dataSource"/></property>
        <property name="annotatedClasses">    
        	<list>    
                <value>org.fage.domain.User</value> 
            </list>    
        </property>    
        <property name="hibernateProperties">    
            <props>    
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>    
                <prop key="hibernate.show_sql">true</prop>    
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.format_sql">true</prop> 
                <prop key="current_session_context_class">thread</prop>
                <!-- <prop key="hibernate.generate_statistics">true</prop>    
                <prop key="hibernate.connection.release_mode">auto</prop>    
                <prop key="hibernate.autoReconnect">true</prop> -->    
            </props>    
        </property>    
    </bean>
<!-- 事务需要配置一个数据源 -->
   <!--  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> 普通JDBC的事务配置--> 
    <!-- Hibernate事务配置，需要一个数据源 -->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>   
	
</beans>